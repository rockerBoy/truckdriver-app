version: '3.8'
services:
    app:
        build:
            context: .
            dockerfile: docker/php/Dockerfile
            target: app_dev
        container_name: truckdriver-app-dev
        restart: unless-stopped
        volumes:
            - ./truckdriver_laravel/:/var/www/html/
            - ./docker/php/conf.d/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
            - ./docker/php/conf.d/error_reporting.ini:/usr/local/etc/php/conf.d/error_reporting.ini
        ports:
            - '9000:9000'
        environment:
            - WORKDIR=/var/www/html
        networks:
            - truckdriver
        extra_hosts:
            - "host.docker.internal:host-gateway"
        depends_on: ['proxy', 'redis', 'postgres', 'ui', 'redis-web']
    ui_build:
        build:
            target: build-stage
            context: ./truckdriver_vue
            dockerfile: ../docker/ui/Dockerfile
        working_dir: /app
        networks:
            - truckdriver
    ui:
        build:
            target: frontend
            context: ./truckdriver_vue
            dockerfile: ../docker/ui/Dockerfile
        container_name: rusnipizda-ui
        working_dir: /app
        restart: unless-stopped
        ports:
            - '80:5173'
        networks:
            - truckdriver
    proxy:
        image: nginx:stable-bullseye
        container_name: rusnipizda-proxy
        ports:
            - '8080:80'
            - '443:443'
        volumes:
            - ./logs/nginx:/var/log/nginx
            - ./docker/nginx/dev/ssl:/etc/nginx/ssl
            - ./docker/nginx/dev/conf:/etc/nginx/conf.d
            - ./truckdriver_laravel:/var/www/html
            - ./truckdriver_vue/dist:/var/www/app
        restart: always
        networks:
            - truckdriver
        environment:
            - DEFAULT_HOSTNAME=${DEFAULT_HOSTNAME}
    redis:
        image: redis:latest
        env_file: .env
        restart: always
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - ../data/redis:/data
        networks:
            - truckdriver
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            retries: 3
            timeout: 5s
        command: ["redis-server", '--appendonly', 'yes', '--requirepass', "${REDIS_PASSWORD}"]
        expose:
            -   "3679"
    redis-web:
        image: rediscommander/redis-commander
        env_file: .env
        environment:
            PORT: "8081"
            REDIS_HOST: redis
            REDIS_DB: "${REDIS_DB}"
            REDIS_PASSWORD: "${REDIS_PASSWORD}"
            NODE_TLS_REJECT_UNAUTHORIZED: "0"
        ports:
            - "${REDIS_WEB_PORT:-8085}:8081"
        logging:
            driver: none
        depends_on:
            - redis
        networks:
            - truckdriver
    postgres:
        image: 'postgres:14'
        env_file: .env
        ports:
            - '${FORWARD_DB_PORT:-5432}:5432'
        environment:
            POSTGRES_DB: "${DB_DATABASE}"
            POSTGRES_USER: "root"
            POSTGRES_PASSWORD: "root"
        volumes:
            - '../data/postgresql/:/var/lib/postgresql/data'
        networks:
            - truckdriver
        healthcheck:
            test: ["CMD", "pg_isready", "-q", "-d", "${DB_DATABASE}", "-U", "${DB_USERNAME}"]
            retries: 3
            timeout: 5s
networks:
    truckdriver:
        driver: bridge
        driver_opts:
            com.docker.network.enable_ipv6: "false"
        ipam:
            driver: default
            config:
                - subnet: 182.11.0.0/16
