version: '3.7'
services:
    nginx:
        image: nginx:1.21-alpine
        container_name: rusnipizda-proxy
        ports:
            - '8080:80'
            - '443:443'
        volumes:
            - ./truckdriver_laravel:/var/www/html/
            - ./logs/nginx:/var/log/nginx/
            - ./docker-compose/nginx/conf.d:/etc/nginx/conf.d
            - ./docker-compose/nginx/.htpasswd:/etc/nginx/.htpasswd
        restart: always
        networks:
            - truckdriver
    php-fpm:
        build:
            context: ./docker-compose/php
        container_name: rusnipizda-php
        working_dir: /var/www/html
        restart: always
        volumes:
            - ./truckdriver_laravel/:/var/www/html/
            - ./logs/php.log:/var/log/fpm-php.www.log
            - ./logs/supervisord:/var/log/supervisor/
        networks:
            - truckdriver
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        depends_on: ['nginx', 'redis', 'postgres']
    redis:
        image: redis:latest
        env_file: .env
        restart: always
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - ./data/redis:/data
        networks:
            - truckdriver
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            retries: 3
            timeout: 5s
        command: ["redis-server", '--appendonly', 'yes', '--requirepass', "${REDIS_PASSWORD}"]
        expose:
            -   "3679"
    redis-web:
        image: rediscommander/redis-commander
        env_file: .env
        environment:
            PORT: "8081"
            REDIS_HOST: redis
            REDIS_DB: "${REDIS_DB}"
            REDIS_PASSWORD: "${REDIS_PASSWORD}"
            NODE_TLS_REJECT_UNAUTHORIZED: "0"
        ports:
            -   "${REDIS_WEB_PORT:-8085}:8081"
        logging:
            driver: none
        depends_on:
            -   redis
        networks:
            - truckdriver
    postgres:
        image: 'postgres:14'
        env_file: .env
        ports:
            - '${FORWARD_DB_PORT:-5432}:5432'
        environment:
            POSTGRES_DB: "${DB_DATABASE}"
            POSTGRES_USER: "root"
            POSTGRES_PASSWORD: "root"
        volumes:
            - './data/postgresql/:/var/lib/postgresql/data'
        networks:
            - truckdriver
        healthcheck:
            test: ["CMD", "pg_isready", "-q", "-d", "${DB_DATABASE}", "-U", "${DB_USERNAME}"]
            retries: 3
            timeout: 5s
networks:
   truckdriver:
       driver: bridge
       driver_opts:
           com.docker.network.enable_ipv6: "false"
       ipam:
           driver: default
           config:
               - subnet: 172.11.0.0/16
